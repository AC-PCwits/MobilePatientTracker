group 'org.jacoco'
version '1.0-SNAPSHOT'

apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'  // Google Services plugin
apply plugin: 'jacoco'

android {
    compileSdkVersion 30
    buildToolsVersion '30.0.3'

    defaultConfig {
        applicationId "com.acpc.mobilepatienttracker"
        minSdkVersion 16
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug{
            debuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            testCoverageEnabled = (true)
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            testCoverageEnabled = (true)
        }
    }
    testOptions {
        animationsDisabled true

        unitTests.all {
            jacoco{
                includeNoLocationClasses = true
            }
        }
        unitTests.returnDefaultValues = true
        unitTests.includeAndroidResources = true
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'com.google.firebase:firebase-database:19.7.0'
    implementation 'com.google.firebase:firebase-auth:20.0.3'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'com.google.android.material:material:1.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    implementation 'com.android.support:recyclerview-v7:+'
    implementation 'com.android.support:cardview-v7:+'

    implementation platform('com.google.firebase:firebase-bom:26.8.0')
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-firestore'

    implementation 'androidx.multidex:multidex:2.0.1'

    testImplementation group: 'junit', name: 'junit', version: '4.12'
    testImplementation 'org.powermock:powermock-api-mockito:1.6.6'
    testImplementation 'org.powermock:powermock-module-junit4:1.6.6'
    testImplementation 'org.robolectric:robolectric:4.4'
    
}

project.afterEvaluate {

    task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'connectedDebugAndroidTest']) {
        group = "Report"
        description = "Generates a Jacoco HTML and XML report based on JUnit 4 coverage debug"

        def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
        def debugTree = fileTree(dir: "${project.buildDir}/intermediates/javac/debug/classes", excludes: fileFilter)

        def coverageSourceDirs = [
                "${project.projectDir}/src/main/java"
        ]
        classDirectories.from(files([debugTree]))
        additionalSourceDirs.from files(coverageSourceDirs)
        sourceDirectories.from files(coverageSourceDirs)
        executionData.from fileTree(dir: project.buildDir, includes: ["**/*.exec", "**/*.ec"])

        reports {
            xml.enabled = true
            html.enabled = true
        }
    }
}
