// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.jacocoVersion = '0.8.4'
    repositories {
        google()
        jcenter()
        
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.3'
        classpath 'com.google.gms:google-services:4.3.5'  // Google Services plugin
        classpath "org.jacoco:org.jacoco.core:0.8.4"
        

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {

    apply plugin: 'maven'
    apply plugin: 'jacoco'

    repositories {
        mavenLocal()
        mavenCentral()
        google()
        jcenter()

        maven{ url "http://repo1.maven.org/maven2/"}
    }

    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:deprecation"
        }
    }
}

task codeCoverageReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'connectedDebugCoverageReport']) {

    group = "Reporting"
    description = "Generate Jacoco coverage report for the jacoco build"

    reports {
        xml.enabled true
        xml.destination file("build/reports/jacoco/report.xml")
        html.enabled true
        html.destination file("build/reports/jacoco/report.html")
        csv.enabled false
    }

    def fileFilter = ['**/R.class',
                      '**/R$*.class',
                      '**/BuildConfig.*',
                      '**/Manifest*.*',
                      '**/*Test*.*',
                      'android/**/*.*',
                      '**/data/models/*']

    //java compiled classes
    def javaTree = fileTree(dir:  "${buildDir}/intermediates/classes/debug", excludes: fileFilter)
//kotlin compiled classes
    def kotlinTree = fileTree(dir: "${buildDir}/tmp/kotlin-classes/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories.from ([mainSrc])
    classDirectories.from {[javaTree,kotlinTree]}
    executionData.from fileTree(dir: "$buildDir", includes: [
            "jacoco/testDebugUnitTest.exec",
            "outputs/code-coverage/connected/*coverage.ec"
    ])
}
